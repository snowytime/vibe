import React from "react";

import { Category } from "../types.js";
import { Tree } from "./tree/index.js";

import "./index.scss";

const GithubIcon = ({ height }: { height?: string }) => (
    <svg
        viewBox='0 0 25 24'
        fill='none'
        height={height || 24}
        color='rgb(var(--foreground, 0, 0, 0))'
    >
        <path
            fillRule='evenodd'
            clipRule='evenodd'
            d='M12.4997 0C5.59706 0 -0.000244141 5.50827 -0.000244141 12.3038C-0.000244141 17.7402 3.58136 22.3519 8.54795 23.9791C9.17245 24.0932 9.40179 23.7122 9.40179 23.3872C9.40179 23.0938 9.3902 22.1246 9.38482 21.0965C5.90734 21.8407 5.17355 19.6448 5.17355 19.6448C4.60494 18.2226 3.78566 17.8445 3.78566 17.8445C2.65134 17.0808 3.87115 17.0967 3.87115 17.0967C5.12615 17.1833 5.78728 18.3646 5.78728 18.3646C6.90215 20.2452 8.71147 19.7016 9.42477 19.3874C9.53696 18.5922 9.86091 18.0492 10.2184 17.742C7.44198 17.4313 4.52318 16.3761 4.52318 11.6616C4.52318 10.3183 5.01168 9.22072 5.81129 8.35888C5.6813 8.04919 5.25345 6.79778 5.93218 5.10302C5.93218 5.10302 6.98163 4.77234 9.37033 6.36421C10.3676 6.09139 11.4372 5.95427 12.4997 5.94958C13.5615 5.95427 14.6317 6.09098 15.6308 6.3638C18.0166 4.77193 19.0649 5.10261 19.0649 5.10261C19.7452 6.79717 19.3174 8.04878 19.1876 8.35847C19.9891 9.22032 20.4741 10.3179 20.4741 11.6612C20.4741 16.3869 17.5499 17.4272 14.7664 17.732C15.215 18.1138 15.6145 18.8628 15.6145 20.0105C15.6145 21.6568 15.6 22.9817 15.6 23.387C15.6 23.7144 15.8252 24.098 16.4586 23.9772C21.4223 22.3485 24.9998 17.7381 24.9998 12.3038C24.9995 5.50868 19.4029 0 12.4997 0Z'
            fill='currentColor'
        />
        <path
            d='M4.7341 17.6654C4.70657 17.7265 4.60887 17.7448 4.51986 17.7031C4.42879 17.6631 4.37807 17.5798 4.40747 17.5185C4.43438 17.4553 4.53228 17.438 4.62274 17.4802C4.71382 17.5203 4.76556 17.6045 4.73389 17.6656L4.7341 17.6654ZM5.24041 18.2214C5.181 18.2758 5.06446 18.2505 4.98539 18.1644C4.90342 18.0788 4.8881 17.9641 4.94875 17.9089C5.01044 17.8547 5.12346 17.8803 5.20542 17.9659C5.28698 18.0527 5.30313 18.1664 5.24061 18.2216L5.24041 18.2214ZM5.73346 18.9298C5.65688 18.9824 5.53144 18.9333 5.45402 18.8239C5.37744 18.7143 5.37744 18.5828 5.45609 18.5305C5.5333 18.4779 5.65688 18.5254 5.73553 18.6338C5.81171 18.7448 5.81171 18.8764 5.73346 18.9298ZM6.40847 19.6146C6.34016 19.689 6.19402 19.669 6.08721 19.5678C5.97813 19.4685 5.9477 19.3273 6.01622 19.2532C6.08577 19.1786 6.23252 19.1994 6.33995 19.3C6.44904 19.3991 6.48195 19.5405 6.40888 19.6144L6.40847 19.6146ZM7.33994 20.0121C7.30951 20.1085 7.16917 20.1523 7.02738 20.1111C6.886 20.069 6.79348 19.9563 6.82245 19.8589C6.85143 19.7617 6.99281 19.7163 7.13543 19.7601C7.2768 19.8021 7.36933 19.9141 7.33994 20.0121ZM8.3631 20.0857C8.36662 20.1871 8.24657 20.2711 8.09815 20.2731C7.9485 20.2766 7.82741 20.1943 7.82596 20.0944C7.82596 19.992 7.94353 19.909 8.09298 19.9062C8.24139 19.9035 8.36331 19.985 8.36331 20.0855L8.3631 20.0857ZM9.31486 19.9263C9.33266 20.0252 9.22937 20.1268 9.08178 20.1539C8.93689 20.1804 8.80234 20.1189 8.78371 20.0209C8.76591 19.9194 8.87106 19.8178 9.01596 19.7915C9.16375 19.7664 9.29623 19.8259 9.31486 19.9263Z'
            fill='currentColor'
        />
    </svg>
);
const CloseIcon = ({ height }: { height: string }) => (
    <svg
        height={height || 24}
        color='rgb(var(--foreground, 0, 0, 0))'
        viewBox='0 0 14 15'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
    >
        <path
            d='M0.231876 14.2703C0.337784 14.3705 0.458403 14.4382 0.59373 14.4735C0.729058 14.5088 0.864386 14.5088 0.999714 14.4735C1.13504 14.4382 1.25272 14.3705 1.35274 14.2703L7.0012 8.61735L12.6497 14.2703C12.7497 14.3705 12.8674 14.4382 13.0027 14.4735C13.138 14.5088 13.2733 14.5088 13.4087 14.4735C13.5499 14.4441 13.6705 14.3763 13.7705 14.2703C13.8706 14.1702 13.9353 14.0525 13.9647 13.917C14 13.7816 14 13.6462 13.9647 13.5107C13.9353 13.3753 13.8706 13.2575 13.7705 13.1574L8.12207 7.49558L13.7705 1.84259C13.8706 1.74248 13.9382 1.62471 13.9735 1.48927C14.0088 1.35384 14.0088 1.2184 13.9735 1.08297C13.9382 0.947529 13.8706 0.829758 13.7705 0.729653C13.6646 0.623659 13.544 0.555941 13.4087 0.526498C13.2733 0.491167 13.138 0.491167 13.0027 0.526498C12.8674 0.555941 12.7497 0.623659 12.6497 0.729653L7.0012 6.38265L1.35274 0.729653C1.25272 0.623659 1.1321 0.555941 0.990888 0.526498C0.85556 0.491167 0.720232 0.491167 0.584905 0.526498C0.449577 0.555941 0.331901 0.623659 0.231876 0.729653C0.131851 0.829758 0.0641871 0.947529 0.0288842 1.08297C-0.000534892 1.2184 -0.000534892 1.35384 0.0288842 1.48927C0.0641871 1.62471 0.131851 1.74248 0.231876 1.84259L5.88034 7.49558L0.231876 13.1574C0.131851 13.2575 0.0641871 13.3753 0.0288842 13.5107C-0.00641871 13.6462 -0.00936061 13.7816 0.0200585 13.917C0.0553613 14.0525 0.125967 14.1702 0.231876 14.2703Z'
            fill='currentColor'
        />
    </svg>
);
const MenuIcon = ({ height }: { height: string }) => (
    <svg
        height={height || 24}
        color='rgb(var(--foreground, 0, 0, 0))'
        viewBox='0 0 13 18'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
    >
        <path
            d='M1.54091 16.3352L10.4344 17.9459C10.9663 18.0421 11.4226 18.01 11.8032 17.8497C12.1891 17.6895 12.4838 17.4117 12.6871 17.0163C12.8957 16.6263 13 16.1348 13 15.5418V5.62895C13 4.81156 12.7966 4.22389 12.3899 3.86595C11.9832 3.50801 11.3835 3.25959 10.5909 3.12068L1.9633 1.55802C1.56699 1.48857 1.22022 1.50994 0.922984 1.62213C0.630967 1.73432 0.404132 1.92665 0.242479 2.19911C0.0808263 2.47158 0 2.80815 0 3.20883V14.5161C0 15.0289 0.127758 15.4376 0.383273 15.7422C0.644003 16.0467 1.02988 16.2443 1.54091 16.3352ZM1.84597 15.061C1.64781 15.0289 1.4992 14.9515 1.40012 14.8286C1.30626 14.7111 1.25933 14.5455 1.25933 14.3318V3.4252C1.25933 3.2115 1.32451 3.0539 1.45487 2.9524C1.59045 2.84555 1.77296 2.81349 2.00241 2.85623L10.5283 4.38684C10.9246 4.46163 11.2244 4.59252 11.4278 4.7795C11.6364 4.96115 11.7407 5.23895 11.7407 5.61292V15.4056C11.7407 15.8597 11.6181 16.1936 11.373 16.4073C11.1332 16.621 10.802 16.6878 10.3797 16.6076L1.84597 15.061ZM11.0445 4.10636H12.3039V2.23117C12.3039 1.38707 12.0431 0.775358 11.5217 0.396046C11.0002 0.0167344 10.2754 -0.0901141 9.34717 0.075501L1.17329 1.55802L1.6426 2.67192L9.79302 1.28556C10.1841 1.21611 10.4892 1.26152 10.7082 1.42179C10.9324 1.58206 11.0445 1.83583 11.0445 2.18309V4.10636ZM3.2148 6.38223L9.24549 7.47209C9.428 7.50414 9.5714 7.46942 9.67569 7.36791C9.7852 7.2664 9.83995 7.13284 9.83995 6.96723C9.83995 6.67339 9.69916 6.49977 9.41757 6.44634L3.41817 5.37251C3.24087 5.34046 3.09487 5.37251 2.98014 5.46868C2.86542 5.5595 2.80806 5.68772 2.80806 5.85333C2.80806 5.99224 2.84196 6.10977 2.90975 6.20593C2.98275 6.3021 3.08444 6.36086 3.2148 6.38223ZM3.2148 9.50755L9.24549 10.5974C9.428 10.6295 9.5714 10.5947 9.67569 10.4932C9.7852 10.3917 9.83995 10.2582 9.83995 10.0925C9.83995 9.79871 9.69916 9.62508 9.41757 9.57166L3.41817 8.49783C3.24087 8.46578 3.09487 8.49783 2.98014 8.59399C2.86542 8.69016 2.80806 8.81838 2.80806 8.97865C2.80806 9.12289 2.84196 9.2431 2.90975 9.33926C2.98275 9.43008 3.08444 9.48618 3.2148 9.50755Z'
            fill='currentColor'
        />
    </svg>
);
const MoonIcon = ({ height }: { height: string }) => (
    <svg
        color='rgb(var(--foreground, 0, 0, 0))'
        height={height || 24}
        viewBox='0 0 16 16'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
    >
        <path
            d='M12.493 10.7405C11.0351 10.7405 9.77336 10.4637 8.70775 9.91003C7.64745 9.3564 6.82836 8.56813 6.2505 7.54523C5.67793 6.52233 5.39165 5.30697 5.39165 3.89916C5.39165 3.29807 5.43671 2.74708 5.52684 2.24617C5.61696 1.74526 5.73625 1.35245 5.88469 1.06772C5.94301 0.951722 5.98012 0.85945 5.99602 0.790905C6.01723 0.72236 6.02783 0.648542 6.02783 0.569451C6.02783 0.437634 5.97217 0.311089 5.86083 0.189817C5.7548 0.0632724 5.61696 0 5.44732 0C5.41551 0 5.36249 0.00790905 5.28827 0.0237271C5.21405 0.0342725 5.12127 0.0632724 5.00994 0.110727C4.02916 0.506179 3.16236 1.08881 2.40954 1.85863C1.65673 2.62844 1.06561 3.51953 0.636183 4.53188C0.212061 5.53897 0 6.59614 0 7.70341C0 8.90559 0.204109 10.0129 0.612326 11.0252C1.02584 12.0323 1.60636 12.9076 2.35388 13.651C3.10139 14.3945 3.98144 14.9718 4.99404 15.3831C6.01193 15.7944 7.12525 16 8.334 16C9.48443 16 10.5527 15.8075 11.5388 15.4226C12.5248 15.043 13.389 14.4973 14.1312 13.7855C14.8734 13.0737 15.4592 12.2247 15.8887 11.2388C15.9364 11.1333 15.9655 11.041 15.9761 10.9619C15.992 10.8776 16 10.8143 16 10.7721C16 10.6087 15.9417 10.4768 15.825 10.3767C15.7137 10.2765 15.5971 10.2264 15.4751 10.2264C15.4115 10.2264 15.3506 10.2317 15.2922 10.2422C15.2339 10.2528 15.1571 10.2739 15.0616 10.3055C14.8443 10.3951 14.5951 10.4716 14.3141 10.5348C14.0384 10.5981 13.7442 10.6482 13.4314 10.6851C13.1239 10.722 12.8111 10.7405 12.493 10.7405ZM1.24851 7.64805C1.24851 6.83078 1.3837 6.03724 1.65408 5.26742C1.92975 4.49761 2.31677 3.79371 2.81511 3.15571C3.31875 2.51771 3.91252 1.98517 4.59642 1.55808C4.46918 1.9219 4.37111 2.30944 4.30219 2.72071C4.23857 3.12671 4.20676 3.55643 4.20676 4.00989C4.20676 5.65497 4.5275 7.06805 5.16899 8.24913C5.81577 9.42495 6.74354 10.3266 7.95229 10.954C9.16634 11.5815 10.619 11.8952 12.3101 11.8952C12.7184 11.8952 13.1001 11.8715 13.4553 11.824C13.8105 11.7713 14.1524 11.6869 14.4811 11.5709C14.0782 12.23 13.5613 12.7995 12.9304 13.2793C12.3048 13.7591 11.6024 14.1256 10.8231 14.3786C10.049 14.637 9.23525 14.7662 8.38171 14.7662C7.35321 14.7662 6.40424 14.5896 5.53479 14.2363C4.66534 13.8883 3.90987 13.3953 3.26839 12.7573C2.62691 12.1193 2.12856 11.3679 1.77336 10.5032C1.42346 9.63322 1.24851 8.6815 1.24851 7.64805Z'
            fill='currentColor'
        />
    </svg>
);
const SunCirclesIcon = ({ height }: { height: string }) => (
    <svg
        height={height || 24}
        color='rgb(var(--foreground, 0, 0, 0))'
        viewBox='0 0 16 16'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
    >
        <path
            d='M8 12.0598C8.55301 12.0598 9.07411 11.9535 9.56331 11.7408C10.0578 11.5281 10.4912 11.2356 10.8634 10.8634C11.2409 10.4912 11.5361 10.0605 11.7488 9.57129C11.9614 9.07677 12.0678 8.55301 12.0678 8C12.0678 7.44168 11.9614 6.91791 11.7488 6.42871C11.5361 5.93952 11.2409 5.50881 10.8634 5.13659C10.4912 4.75906 10.0578 4.46394 9.56331 4.25125C9.07411 4.03855 8.55301 3.9322 8 3.9322C7.44699 3.9322 6.92323 4.03855 6.42871 4.25125C5.93952 4.46394 5.50881 4.75906 5.13659 5.13659C4.76437 5.50881 4.47192 5.93952 4.25922 6.42871C4.04653 6.91791 3.94018 7.44168 3.94018 8C3.94018 8.55301 4.04653 9.07677 4.25922 9.57129C4.47192 10.0605 4.76437 10.4912 5.13659 10.8634C5.50881 11.2356 5.93952 11.5281 6.42871 11.7408C6.92323 11.9535 7.44699 12.0598 8 12.0598ZM8 10.8475C7.4789 10.8475 7.00299 10.7198 6.57228 10.4646C6.14158 10.2041 5.79595 9.85843 5.53539 9.42772C5.28016 8.99701 5.15254 8.5211 5.15254 8C5.15254 7.48421 5.28016 7.01097 5.53539 6.58026C5.79595 6.14423 6.14158 5.79595 6.57228 5.53539C7.00299 5.27484 7.4789 5.14457 8 5.14457C8.5211 5.14457 8.99701 5.27484 9.42772 5.53539C9.85843 5.79595 10.2041 6.14158 10.4646 6.57228C10.7252 7.00299 10.8554 7.4789 10.8554 8C10.8554 8.5211 10.7252 8.99701 10.4646 9.42772C10.2041 9.85843 9.85843 10.2041 9.42772 10.4646C8.99701 10.7198 8.5211 10.8475 8 10.8475ZM0.9332 8.9332C1.18843 8.9332 1.40645 8.8428 1.58724 8.66201C1.77335 8.47591 1.8664 8.25523 1.8664 8C1.8664 7.74477 1.77335 7.52675 1.58724 7.34596C1.40645 7.15985 1.18843 7.0668 0.9332 7.0668C0.677966 7.0668 0.457295 7.15985 0.271186 7.34596C0.0903955 7.52675 0 7.74477 0 8C0 8.25523 0.0903955 8.47591 0.271186 8.66201C0.457295 8.8428 0.677966 8.9332 0.9332 8.9332ZM2.999 3.9322C3.25424 3.9322 3.47225 3.84181 3.65304 3.66102C3.83915 3.47491 3.9322 3.25424 3.9322 2.999C3.9322 2.74377 3.83915 2.52576 3.65304 2.34497C3.47225 2.15886 3.25424 2.0658 2.999 2.0658C2.74377 2.0658 2.5231 2.15886 2.33699 2.34497C2.1562 2.52576 2.0658 2.74377 2.0658 2.999C2.0658 3.25424 2.1562 3.47491 2.33699 3.66102C2.5231 3.84181 2.74377 3.9322 2.999 3.9322ZM8 1.8664C8.25523 1.8664 8.47325 1.77601 8.65404 1.59521C8.84015 1.40911 8.9332 1.18843 8.9332 0.9332C8.9332 0.677966 8.84015 0.459953 8.65404 0.279163C8.47325 0.0930542 8.25523 0 8 0C7.74477 0 7.52409 0.0930542 7.33799 0.279163C7.1572 0.459953 7.0668 0.677966 7.0668 0.9332C7.0668 1.18843 7.1572 1.40911 7.33799 1.59521C7.52409 1.77601 7.74477 1.8664 8 1.8664ZM13.001 3.9322C13.2562 3.9322 13.4742 3.84181 13.655 3.66102C13.8411 3.47491 13.9342 3.25424 13.9342 2.999C13.9342 2.74377 13.8411 2.52576 13.655 2.34497C13.4742 2.15886 13.2562 2.0658 13.001 2.0658C12.7458 2.0658 12.5251 2.15886 12.339 2.34497C12.1582 2.52576 12.0678 2.74377 12.0678 2.999C12.0678 3.25424 12.1582 3.47491 12.339 3.66102C12.5251 3.84181 12.7458 3.9322 13.001 3.9322ZM15.0668 8.9332C15.322 8.9332 15.54 8.8428 15.7208 8.66201C15.9069 8.47591 16 8.25523 16 8C16 7.74477 15.9069 7.52675 15.7208 7.34596C15.54 7.15985 15.322 7.0668 15.0668 7.0668C14.8116 7.0668 14.5909 7.15985 14.4048 7.34596C14.224 7.52675 14.1336 7.74477 14.1336 8C14.1336 8.25523 14.224 8.47591 14.4048 8.66201C14.5909 8.8428 14.8116 8.9332 15.0668 8.9332ZM13.001 13.9342C13.2562 13.9342 13.4742 13.8438 13.655 13.663C13.8411 13.4769 13.9342 13.2562 13.9342 13.001C13.9342 12.7458 13.8411 12.5278 13.655 12.347C13.4742 12.1609 13.2562 12.0678 13.001 12.0678C12.7458 12.0678 12.5251 12.1609 12.339 12.347C12.1582 12.5278 12.0678 12.7458 12.0678 13.001C12.0678 13.2562 12.1582 13.4769 12.339 13.663C12.5251 13.8438 12.7458 13.9342 13.001 13.9342ZM8 16C8.25523 16 8.47325 15.9069 8.65404 15.7208C8.84015 15.54 8.9332 15.322 8.9332 15.0668C8.9332 14.8116 8.84015 14.5909 8.65404 14.4048C8.47325 14.224 8.25523 14.1336 8 14.1336C7.74477 14.1336 7.52409 14.224 7.33799 14.4048C7.1572 14.5909 7.0668 14.8116 7.0668 15.0668C7.0668 15.322 7.1572 15.54 7.33799 15.7208C7.52409 15.9069 7.74477 16 8 16ZM2.999 13.9342C3.25424 13.9342 3.47225 13.8438 3.65304 13.663C3.83915 13.4769 3.9322 13.2562 3.9322 13.001C3.9322 12.7458 3.83915 12.5278 3.65304 12.347C3.47225 12.1609 3.25424 12.0678 2.999 12.0678C2.74377 12.0678 2.5231 12.1609 2.33699 12.347C2.1562 12.5278 2.0658 12.7458 2.0658 13.001C2.0658 13.2562 2.1562 13.4769 2.33699 13.663C2.5231 13.8438 2.74377 13.9342 2.999 13.9342Z'
            fill='currentColor'
        />
    </svg>
);

export const useTheme = () => {
    const [theme, setTheme] = React.useState("light");
    const toggleTheme = React.useCallback(() => {
        if (theme === "light") {
            setTheme("dark");
        } else {
            setTheme("light");
        }
    }, [theme]);
    React.useLayoutEffect(() => {
        document.documentElement.setAttribute("data-theme", theme);
        document.documentElement.style.transition = "color 0.2s ease-in-out";
    }, [theme]);
    return { theme, setTheme, toggleTheme };
};

export const Ui = ({
    children,
    title,
    tree,
    sidebar = true,
    repo,
    website,
}: {
    children: React.ReactNode;
    title: string;
    tree: Category[];
    sidebar: boolean;
    repo: string;
    website: string;
}) => {
    const [open, setOpen] = React.useState(true);
    const { theme, toggleTheme } = useTheme();
    return (
        <main className='vibe-wrapper'>
            <nav className='vibe-nav'>
                <div className='vibe-toolbar'>
                    {sidebar ? (
                        <div className='sidebar-btn' onClick={() => setOpen((s) => !s)}>
                            {open ? <CloseIcon height='40%' /> : <MenuIcon height='50%' />}
                        </div>
                    ) : (
                        ""
                    )}
                    <div className='sidebar-btn' onClick={toggleTheme}>
                        {theme === "light" ? (
                            <SunCirclesIcon height='55%' />
                        ) : (
                            <MoonIcon height='45%' />
                        )}
                    </div>
                </div>
                <a href={website} target='_blank' rel='noreferrer' className='vibe-title'>
                    {title}
                </a>
                <a href={repo} target='_blank' rel='noreferrer' className='vibe-repo'>
                    <GithubIcon />
                </a>
            </nav>
            <section className='vibe-content'>
                {sidebar ? (
                    <div
                        style={{
                            width: open ? "" : "0",
                            transition: "width 0.2s ease-in-out",
                            border: open ? "" : "none",
                        }}
                        className='vibe-content-sidebar'
                    >
                        <Tree data={tree} />
                    </div>
                ) : (
                    ""
                )}
                <div className='vibe-content-window'>{children}</div>
            </section>
        </main>
    );
};
